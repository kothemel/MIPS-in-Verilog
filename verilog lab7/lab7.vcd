$date
	Sat Nov 30 19:08:47 2013
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_tb $end
$var reg 1 ! clock $end
$var integer 32 " i [31:0] $end
$var reg 1 # reset $end
$scope module cpu0 $end
$var wire 4 $ alu_ctrl [3:0] $end
$var wire 2 % alu_op [1:0] $end
$var wire 1 & clock $end
$var wire 6 ' func_code [5:0] $end
$var wire 6 ( op [5:0] $end
$var wire 1 ) regWrite $end
$var wire 1 * reset $end
$scope module dec_main $end
$var wire 6 + op [5:0] $end
$var wire 1 ) regWrite $end
$var reg 2 , alu_op [1:0] $end
$upscope $end
$scope module dec_alu $end
$var wire 2 - alu_op [1:0] $end
$var wire 6 . func_code [5:0] $end
$var reg 4 / alu_ctrl [3:0] $end
$upscope $end
$scope module datapass $end
$var wire 4 0 alu_ctrl [3:0] $end
$var wire 1 & clock $end
$var wire 32 1 din [31:0] $end
$var wire 6 2 func_code [5:0] $end
$var wire 32 3 instr [31:0] $end
$var wire 6 4 op [5:0] $end
$var wire 32 5 out [31:0] $end
$var wire 32 6 pc [31:0] $end
$var wire 32 7 pc_new [31:0] $end
$var wire 32 8 rdA [31:0] $end
$var wire 32 9 rdB [31:0] $end
$var wire 1 ) regWrite $end
$var wire 1 * reset $end
$var wire 1 : zero $end
$scope module reloaded_pc $end
$var wire 32 ; PC_new [31:0] $end
$var wire 1 & clock $end
$var wire 1 * reset $end
$var reg 32 < PC [31:0] $end
$upscope $end
$scope module additive $end
$var wire 32 = current [31:0] $end
$var wire 32 > next_pc [31:0] $end
$upscope $end
$scope module mem $end
$var wire 32 ? addr [31:0] $end
$var wire 1 & clock $end
$var wire 32 @ din [31:0] $end
$var wire 32 A dout [31:0] $end
$var wire 1 B ren $end
$var wire 1 * reset $end
$var wire 1 C wen $end
$upscope $end
$scope module cpu_regs $end
$var wire 1 & clock $end
$var wire 5 D raA [4:0] $end
$var wire 5 E raB [4:0] $end
$var wire 32 F rdA [31:0] $end
$var wire 32 G rdB [31:0] $end
$var wire 1 * reset $end
$var wire 5 H wa [4:0] $end
$var wire 32 I wd [31:0] $end
$var wire 1 ) wen $end
$var integer 32 J i [31:0] $end
$upscope $end
$scope module my_alu $end
$var wire 4 K alu_ctrl [3:0] $end
$var wire 32 L inA [31:0] $end
$var wire 32 M inB [31:0] $end
$var wire 1 : zero $end
$var reg 32 N out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0x N
bx M
bx L
b1111 K
b100000 J
b0x I
bx H
bx G
bx F
bx E
bx D
0C
1B
bx A
bz @
b0 ?
b100 >
b0 =
b0 <
b100 ;
x:
bx 9
bx 8
b100 7
b0 6
b0x 5
bx 4
bx 3
bx 2
bz 1
b1111 0
b1111 /
bx .
b11 -
b11 ,
bx +
0*
z)
bx (
bx '
0&
b11 %
b1111 $
0#
bx "
0!
$end
#1000
1!
1&
#2000
b100000 J
0!
0&
#3000
1!
1&
#4000
b11000 N
0:
b11000 5
b11000 I
b10 /
b10 $
b10 0
b10 K
b10 ,
b10 %
b10 -
b100000 '
b100000 .
b100000 2
b0 (
b0 +
b0 4
b1000 H
b10000 E
b10000 9
b10000 G
b10000 M
b1000 D
b1000 8
b1000 F
b1000 L
b1000100000100000000100000 3
b1000100000100000000100000 A
0!
0&
b100000 "
1#
1*
#5000
b110 /
b110 $
b110 0
b110 K
b101 N
b101 5
b101 I
b100010 '
b100010 .
b100010 2
b1001 H
b100 E
b100 9
b100 G
b100 M
b1001 D
b1001 8
b1001 F
b1001 L
b1001001000100100000100010 3
b1001001000100100000100010 A
b1000 7
b1000 ;
b1000 >
b100 <
b100 6
b100 =
b100 ?
1!
1&
#6000
0!
0&
#7000
b1 /
b1 $
b1 0
b1 K
b1111 N
b1111 5
b1111 I
b100101 '
b100101 .
b100101 2
b1111 H
b1101 E
b1101 9
b1101 G
b1101 M
b1111 D
b1111 8
b1111 F
b1111 L
b1111011010111100000100101 3
b1111011010111100000100101 A
b1100 7
b1100 ;
b1100 >
b1000 <
b1000 6
b1000 =
b1000 ?
1!
1&
#8000
0!
0&
#9000
b0 /
b0 $
b0 0
b0 K
b10000 N
b10000 5
b10000 I
b100100 '
b100100 .
b100100 2
b10001 H
b10010 E
b10010 9
b10010 G
b10010 M
b10000 D
b10000 8
b10000 F
b10000 L
b10000100101000100000100100 3
b10000100101000100000100100 A
b10000 7
b10000 ;
b10000 >
b1100 <
b1100 6
b1100 =
b1100 ?
1!
1&
#10000
0!
0&
#11000
1:
b111 /
b111 $
b111 0
b111 K
b0 N
b0 5
b0 I
b101010 '
b101010 .
b101010 2
b10010 H
b1111 E
b1111 9
b1111 G
b1111 M
b10001 D
b10001 8
b10001 F
b10001 L
b10001011111001001000101010 3
b10001011111001001000101010 A
b10100 7
b10100 ;
b10100 >
b10000 <
b10000 6
b10000 =
b10000 ?
1!
1&
#12000
0!
0&
#13000
b11000 N
0:
b11000 5
b11000 I
b10 /
b10 $
b10 0
b10 K
b100000 '
b100000 .
b100000 2
b1111 H
b1100 E
b1100 9
b1100 G
b1100 M
b1100 D
b1100 8
b1100 F
b1100 L
b1100011000111100000100000 3
b1100011000111100000100000 A
b11000 7
b11000 ;
b11000 >
b10100 <
b10100 6
b10100 =
b10100 ?
1!
1&
#14000
0!
0&
#15000
b111 /
b111 $
b111 0
b111 K
b1 N
b1 5
b1 I
b101010 '
b101010 .
b101010 2
b1101 E
b1101 9
b1101 G
b1101 M
b1100011010111100000101010 3
b1100011010111100000101010 A
b11100 7
b11100 ;
b11100 >
b11000 <
b11000 6
b11000 =
b11000 ?
1!
1&
#16000
0!
0&
#17000
b1111 /
b1111 $
b1111 0
b1111 K
b11 ,
b11 %
b11 -
b0x N
x:
b0x 5
b0x I
bx '
bx .
bx 2
bx (
bx +
bx 4
bx H
bx E
bx 9
bx G
bx M
bx D
bx 8
bx F
bx L
bx 3
bx A
b100000 7
b100000 ;
b100000 >
b11100 <
b11100 6
b11100 =
b11100 ?
1!
1&
#18000
0!
0&
#19000
b100100 7
b100100 ;
b100100 >
b100000 <
b100000 6
b100000 =
b100000 ?
1!
1&
#20000
0!
0&
#21000
b101000 7
b101000 ;
b101000 >
b100100 <
b100100 6
b100100 =
b100100 ?
1!
1&
#22000
0!
0&
#23000
b101100 7
b101100 ;
b101100 >
b101000 <
b101000 6
b101000 =
b101000 ?
1!
1&
#24000
0!
0&
#25000
b110000 7
b110000 ;
b110000 >
b101100 <
b101100 6
b101100 =
b101100 ?
1!
1&
#26000
0!
0&
#27000
b110100 7
b110100 ;
b110100 >
b110000 <
b110000 6
b110000 =
b110000 ?
1!
1&
#28000
0!
0&
#29000
b111000 7
b111000 ;
b111000 >
b110100 <
b110100 6
b110100 =
b110100 ?
1!
1&
#30000
0!
0&
#31000
b111100 7
b111100 ;
b111100 >
b111000 <
b111000 6
b111000 =
b111000 ?
1!
1&
#32000
0!
0&
#33000
b1000000 7
b1000000 ;
b1000000 >
b111100 <
b111100 6
b111100 =
b111100 ?
1!
1&
#34000
0!
0&
#35000
b1000100 7
b1000100 ;
b1000100 >
b1000000 <
b1000000 6
b1000000 =
b1000000 ?
1!
1&
#36000
0!
0&
#37000
b1001000 7
b1001000 ;
b1001000 >
b1000100 <
b1000100 6
b1000100 =
b1000100 ?
1!
1&
#38000
0!
0&
#39000
b1001100 7
b1001100 ;
b1001100 >
b1001000 <
b1001000 6
b1001000 =
b1001000 ?
1!
1&
#40000
0!
0&
#41000
b1010000 7
b1010000 ;
b1010000 >
b1001100 <
b1001100 6
b1001100 =
b1001100 ?
1!
1&
#42000
0!
0&
#43000
b1010100 7
b1010100 ;
b1010100 >
b1010000 <
b1010000 6
b1010000 =
b1010000 ?
1!
1&
#44000
0!
0&
#45000
b1011000 7
b1011000 ;
b1011000 >
b1010100 <
b1010100 6
b1010100 =
b1010100 ?
1!
1&
#46000
0!
0&
#47000
b1011100 7
b1011100 ;
b1011100 >
b1011000 <
b1011000 6
b1011000 =
b1011000 ?
1!
1&
#48000
0!
0&
#49000
b1100000 7
b1100000 ;
b1100000 >
b1011100 <
b1011100 6
b1011100 =
b1011100 ?
1!
1&
#50000
0!
0&
#51000
b1100100 7
b1100100 ;
b1100100 >
b1100000 <
b1100000 6
b1100000 =
b1100000 ?
1!
1&
#52000
0!
0&
#53000
b1101000 7
b1101000 ;
b1101000 >
b1100100 <
b1100100 6
b1100100 =
b1100100 ?
1!
1&
#54000
0!
0&
#55000
b1101100 7
b1101100 ;
b1101100 >
b1101000 <
b1101000 6
b1101000 =
b1101000 ?
1!
1&
#56000
0!
0&
#57000
b1110000 7
b1110000 ;
b1110000 >
b1101100 <
b1101100 6
b1101100 =
b1101100 ?
1!
1&
#58000
0!
0&
#59000
b1110100 7
b1110100 ;
b1110100 >
b1110000 <
b1110000 6
b1110000 =
b1110000 ?
1!
1&
#60000
0!
0&
#61000
b1111000 7
b1111000 ;
b1111000 >
b1110100 <
b1110100 6
b1110100 =
b1110100 ?
1!
1&
#62000
0!
0&
#63000
b1111100 7
b1111100 ;
b1111100 >
b1111000 <
b1111000 6
b1111000 =
b1111000 ?
1!
1&
#64000
0!
0&
#65000
b10000000 7
b10000000 ;
b10000000 >
b1111100 <
b1111100 6
b1111100 =
b1111100 ?
1!
1&
#66000
0!
0&
#67000
b10000100 7
b10000100 ;
b10000100 >
b10000000 <
b10000000 6
b10000000 =
b10000000 ?
1!
1&
#68000
0!
0&
#69000
b10001000 7
b10001000 ;
b10001000 >
b10000100 <
b10000100 6
b10000100 =
b10000100 ?
1!
1&
#70000
0!
0&
#71000
b10001100 7
b10001100 ;
b10001100 >
b10001000 <
b10001000 6
b10001000 =
b10001000 ?
1!
1&
#72000
0!
0&
#73000
b10010000 7
b10010000 ;
b10010000 >
b10001100 <
b10001100 6
b10001100 =
b10001100 ?
1!
1&
#74000
0!
0&
#75000
b10010100 7
b10010100 ;
b10010100 >
b10010000 <
b10010000 6
b10010000 =
b10010000 ?
1!
1&
#76000
0!
0&
#77000
b10011000 7
b10011000 ;
b10011000 >
b10010100 <
b10010100 6
b10010100 =
b10010100 ?
1!
1&
#78000
0!
0&
#79000
b10011100 7
b10011100 ;
b10011100 >
b10011000 <
b10011000 6
b10011000 =
b10011000 ?
1!
1&
#80000
0!
0&
#81000
b10100000 7
b10100000 ;
b10100000 >
b10011100 <
b10011100 6
b10011100 =
b10011100 ?
1!
1&
#82000
0!
0&
#83000
b10100100 7
b10100100 ;
b10100100 >
b10100000 <
b10100000 6
b10100000 =
b10100000 ?
1!
1&
#84000
0!
0&
